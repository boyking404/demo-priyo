name: Auto-Merge Project Submissions (No Web Files, Require Python/AIML)

on:
  schedule:
    - cron: '46 16 * * *' 

permissions:
  contents: read
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Check PR structure and rules
        id: check_pr
        run: |
          PR_FILES=$(gh pr view ${{ github.event.pull_request.number }} --json files --jq '.files[].path')
          PR_CHANGES=$(gh pr view ${{ github.event.pull_request.number }} --json additions,deletions --jq '(.additions + .deletions)')
          FILE_COUNT=$(echo "$PR_FILES" | wc -l)
          VALID=true
          REASONS=""
          
          # Check if all files are within a single directory in the root
          ROOT_DIR=$(echo "$PR_FILES" | cut -d'/' -f1 | sort -u)
          if [ $(echo "$ROOT_DIR" | wc -l) -ne 1 ] || [ -z "$ROOT_DIR" ] || [ "$ROOT_DIR" = "." ]; then
            VALID=false
            REASONS+="- Files are not within a single directory in the root.\n"
          fi
          
          # Check if the directory name is valid (alphanumeric, hyphens, and underscores only)
          if ! [[ $ROOT_DIR =~ ^[a-zA-Z0-9_-]+$ ]]; then
            VALID=false
            REASONS+="- Directory name contains invalid characters.\n"
          fi
          
          # Check for node_modules or venv folders
          if echo "$PR_FILES" | grep -qE '(node_modules|venv)/'; then
            VALID=false
            REASONS+="- 'node_modules' or 'venv' folders found in the PR.\n"
          fi
          
          # Check for merge conflicts
          if gh pr view ${{ github.event.pull_request.number }} --json mergeable --jq '.mergeable' | grep -q false; then
            VALID=false
            REASONS+="- PR has merge conflicts.\n"
          fi
          
          # Check for spaces at the beginning or end of folder names
          if echo "$PR_FILES" | grep -qE '(^| )/| /|/ |/$'; then
            VALID=false
            REASONS+="- Spaces found at the beginning or end of folder names in file paths.\n"
          fi

          # Check for absence of .py files and presence of web-related files
          if echo "$PR_FILES" | grep -qE '\.py$'; then
            VALID=false
            REASONS+="- Python (.py) files are not allowed in this PR.\n"
          fi
          if ! echo "$PR_FILES" | grep -qE '\.(html|css|js|jsx|ts|tsx)$'; then
            VALID=false
            REASONS+="- At least one web-related file (.html, .css, .js, .jsx, .ts, .tsx) is required in this PR.\n"
          fi
          
          # Check for minimum 300 lines changed and maximum 100 files (no comment added)
          if [ $PR_CHANGES -lt 10 ] || [ $FILE_COUNT -gt 100 ]; then
            VALID=false
            REASONS+="- lines"
          fi
          
          echo "::set-output name=valid::$VALID"
          echo "::set-output name=reasons::$REASONS"
          echo "VALID: $VALID"
          echo "REASONS: $REASONS"
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Add open-odyssey label
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "open-odyssey"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          
      - name: Auto-merge pull request
        if: steps.check_pr.outputs.valid == 'true'
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "dino-accepted"
          gh pr merge ${{ github.event.pull_request.number }} --auto --merge
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Label on invalid PR
        if: steps.check_pr.outputs.valid == 'false'
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "waiting room"
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Comment on invalid PR
        if: steps.check_pr.outputs.valid == 'false' && steps.check_pr.outputs.reasons != ''
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "This pull request does not meet the required structure or rules. Please address the following issues:\n\n${{ steps.check_pr.outputs.reasons }}"
        env:
          GH_TOKEN: ${{ secrets.PAT }}

            
